let User,Stripe,queryString;_a8f‍.x([["createConnectionAccount",()=>createConnectionAccount]]);_a8f‍.w("../../Models/User",[["default",["User"],function(v){User=v}]]);_a8f‍.w("stripe",[["default",["Stripe"],function(v){Stripe=v}]]);_a8f‍.w("query-string",[["default",["queryString"],function(v){queryString=v}]]);



const stripe = Stripe(process.env.STRIPE_SECRET);

       const createConnectionAccount  = async (request, response) => {
    try
    {
    const user = await User.findById(request.user._id).exec();
    _a8f‍.g.console.log("USER: ", user);

    const account = await stripe.accounts.create({
        type: 'express',
    });
    _a8f‍.g.console.log("Account: ", account);
    user.stripe_account_id = account.id;
    user.save();

    let accounLink = await stripe.accountLinks.create({
        account: user.stripe_account_id,
        refresh_url: process.env.STRIPE_REDIRECT_URL,
        return_url: process.env.STRIPE_REDIRECT_URL,
        type: "account_onboarding",
    });

    acountLink = Object.assign({
        "stripe_user[email]": user.email || undefined,
    });
    _a8f‍.g.console.log("ACCOUNT LINK: ", accountLinks);
    } catch (error)
    {
    _a8f‍.g.console.log(error);
    }

    
}

